services:
  server:
    build:
      # บอกตำแหน่งของฝั่ง server แลพ docker ไฟล์ข้างในนั้น
      context: ./server
      dockerfile: Dockerfile.server
    ports:
      - "5008:5000"
    volumes:
      - "./server:/app"
      # เข้าถึงตัว node module ได้
      - "/app/node_modules"
    command: nodemon --legacy-watch index.js
    restart:
      always
      #postgres ทำทั้งหมดให้รู้จักกัน โดยไม่ต้องระบุหมายเลข IP
      #username:password หลัง @ location db port:5432 หลัง / name db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5433/app_db
      - HOST=db
      - USER=postgres
      - DB=app_db
      - DB_PORT=5433
      - SERVER_PORT=5000
    depends_on:
      - db

  client:
    build:
      # บอกตำแหน่งของฝั่ง server แลพ docker ไฟล์ข้างในนั้น
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "5173:5173"
    volumes:
      - "./client:/app"
      # เข้าถึงตัว node module ได้
      - "/app/node_modules"
      #postgres ทำทั้งหมดให้รู้จักกัน โดยไม่ต้องระบุหมายเลข IP
      #username:password หลัง @ location db port:5432 หลัง / name db
    environment:
      - CHOKIDAR_USEPOLLING=true
    # รอ server เสร็จก่อน
    depends_on:
      - server

  # database
  db:
    image: postgres:16
    restart: always
    ports:
      - "15438:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
